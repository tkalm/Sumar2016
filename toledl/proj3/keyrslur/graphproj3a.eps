%!PS-Adobe-2.0
%%Title: graphproj3a.eps
%%Creator: gnuplot 5.0 patchlevel 0
%%CreationDate: Thu Jun 30 14:11:48 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 1058 770
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 1058 50 lineto 1058 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (graphproj3a.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 0)
  /Author (tkj3)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jun 30 14:11:48 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
602 448 M
63 0 V
9161 0 R
-63 0 V
stroke
518 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-45)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 1151 M
63 0 V
9161 0 R
-63 0 V
stroke
518 1151 M
[ [(Helvetica) 140.0 0.0 true true 0 (-40)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 1855 M
63 0 V
9161 0 R
-63 0 V
stroke
518 1855 M
[ [(Helvetica) 140.0 0.0 true true 0 (-35)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 2558 M
63 0 V
9161 0 R
-63 0 V
stroke
518 2558 M
[ [(Helvetica) 140.0 0.0 true true 0 (-30)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 3262 M
63 0 V
9161 0 R
-63 0 V
stroke
518 3262 M
[ [(Helvetica) 140.0 0.0 true true 0 (-25)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 3965 M
63 0 V
9161 0 R
-63 0 V
stroke
518 3965 M
[ [(Helvetica) 140.0 0.0 true true 0 (-20)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 4669 M
63 0 V
9161 0 R
-63 0 V
stroke
518 4669 M
[ [(Helvetica) 140.0 0.0 true true 0 (-15)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 5372 M
63 0 V
9161 0 R
-63 0 V
stroke
518 5372 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 6076 M
63 0 V
9161 0 R
-63 0 V
stroke
518 6076 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 6779 M
63 0 V
9161 0 R
-63 0 V
stroke
518 6779 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 448 M
0 63 V
0 6268 R
0 -63 V
stroke
602 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2139 448 M
0 63 V
0 6268 R
0 -63 V
stroke
2139 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3677 448 M
0 63 V
0 6268 R
0 -63 V
stroke
3677 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5214 448 M
0 63 V
0 6268 R
0 -63 V
stroke
5214 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6751 448 M
0 63 V
0 6268 R
0 -63 V
stroke
6751 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
8289 448 M
0 63 V
0 6268 R
0 -63 V
stroke
8289 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
9826 448 M
0 63 V
0 6268 R
0 -63 V
stroke
9826 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
602 6779 N
602 448 L
9224 0 V
0 6331 V
-9224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
112 3613 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (log\(abs\(E)]
[(Helvetica) 112.0 -42.0 true true 0 (i)]
[(Helvetica) 140.0 0.0 true true 0 (\)\) both real and imag)]
] -32.7 MCshow
grestore
LTb
LCb setrgbcolor
5214 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (i)]
] -46.7 MCshow
LTb
LCb setrgbcolor
5214 6989 M
[ [(Helvetica) 140.0 0.0 true true 0 (Eigenspectrum)]
] -46.7 MCshow
% Begin plot #1
1.000 UL
LTb
0.17 0.35 0.56 C LCb setrgbcolor
9031 3775 M
[ [(Helvetica) 180.0 0.0 true true 0 (Real part)]
] -60.0 MRshow
1.000 UL
LTb
0.17 0.35 0.56 C 9139 3775 M
495 0 V
602 1814 M
31 434 V
30 545 V
31 497 V
31 461 V
31 429 V
30 401 V
31 374 V
31 346 V
31 319 V
30 291 V
31 259 V
31 223 V
31 181 V
30 126 V
31 35 V
31 -5461 V
31 792 V
30 549 V
31 498 V
31 460 V
31 430 V
30 400 V
31 374 V
31 346 V
31 320 V
30 290 V
31 259 V
31 224 V
31 181 V
30 125 V
31 36 V
31 -4831 V
31 140 V
30 522 V
31 497 V
31 461 V
31 429 V
30 401 V
31 373 V
31 347 V
31 319 V
30 291 V
31 259 V
31 223 V
31 181 V
30 126 V
31 35 V
31 -4993 V
31 273 V
30 518 V
31 502 V
31 461 V
31 429 V
30 401 V
31 374 V
31 346 V
31 319 V
30 291 V
31 259 V
31 223 V
31 181 V
30 126 V
31 35 V
31 -4644 V
31 281 V
30 152 V
31 491 V
31 461 V
31 429 V
30 401 V
31 373 V
31 347 V
31 319 V
30 290 V
31 259 V
31 224 V
30 181 V
31 125 V
31 36 V
31 -4167 V
30 -196 V
31 138 V
31 484 V
31 466 V
30 429 V
31 401 V
31 373 V
31 347 V
30 319 V
31 291 V
31 259 V
31 223 V
30 181 V
31 126 V
31 35 V
31 -3793 V
30 -66 V
31 -91 V
31 216 V
31 447 V
30 429 V
31 400 V
stroke 3738 3052 M
31 374 V
31 346 V
30 320 V
31 290 V
31 259 V
31 223 V
30 182 V
31 125 V
31 35 V
31 -3784 V
30 -67 V
31 -36 V
31 156 V
31 429 V
30 432 V
31 402 V
31 373 V
31 347 V
30 319 V
31 290 V
31 259 V
31 224 V
30 181 V
31 125 V
31 36 V
31 -3231 V
30 -319 V
31 168 V
31 -87 V
31 243 V
30 349 V
31 399 V
31 373 V
31 347 V
30 319 V
31 290 V
31 259 V
31 224 V
30 181 V
31 125 V
31 36 V
31 -2812 V
30 -108 V
31 -66 V
31 -61 V
31 -93 V
30 213 V
31 439 V
31 375 V
30 347 V
31 319 V
31 290 V
31 259 V
30 224 V
31 181 V
31 125 V
31 36 V
30 -2739 V
31 241 V
31 -159 V
31 -103 V
30 -95 V
31 148 V
31 239 V
31 349 V
30 345 V
31 319 V
31 290 V
31 260 V
30 223 V
31 181 V
31 125 V
31 36 V
30 -2250 V
31 -70 V
31 -60 V
31 14 V
30 45 V
31 -146 V
31 -79 V
31 400 V
30 364 V
31 321 V
31 290 V
31 259 V
30 224 V
31 181 V
31 125 V
31 36 V
30 -2151 V
31 350 V
31 -291 V
31 -145 V
30 -198 V
31 377 V
31 -46 V
31 108 V
30 228 V
31 302 V
31 289 V
31 259 V
30 223 V
31 181 V
31 126 V
stroke 6936 3162 M
31 35 V
30 -1647 V
31 141 V
31 1 V
31 -97 V
30 16 V
31 -166 V
31 0 V
31 24 V
30 -153 V
31 379 V
31 316 V
31 262 V
30 224 V
31 181 V
31 125 V
31 36 V
30 -1021 V
31 -114 V
31 -232 V
30 126 V
31 -77 V
31 -59 V
31 -65 V
30 64 V
31 21 V
31 42 V
31 165 V
30 228 V
31 218 V
31 180 V
31 125 V
30 36 V
31 -665 V
31 19 V
31 -128 V
30 -264 V
31 55 V
31 -131 V
31 122 V
30 4 V
31 -30 V
31 23 V
31 -42 V
30 -71 V
31 375 V
31 196 V
31 129 V
30 37 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LTb
0.00 0.39 0.00 C LCb setrgbcolor
9031 3451 M
[ [(Helvetica) 180.0 0.0 true true 0 (Imaginary part)]
] -60.0 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.39 0.00 C 602 1851 Crs
633 2413 Crs
663 2915 Crs
694 3378 Crs
725 3808 Crs
756 4210 Crs
786 4584 Crs
817 4931 Crs
848 5251 Crs
879 5541 Crs
909 5800 Crs
940 6022 Crs
971 6200 Crs
1002 6319 Crs
1032 6342 Crs
1094 1524 Crs
1125 2234 Crs
1155 2737 Crs
1186 3200 Crs
1217 3631 Crs
1248 4032 Crs
1278 4406 Crs
1309 4753 Crs
1340 5073 Crs
1371 5363 Crs
1401 5622 Crs
1432 5844 Crs
1463 6022 Crs
1494 6141 Crs
1524 6164 Crs
1555 3707 Crs
1586 1470 Crs
1617 1997 Crs
1647 2510 Crs
1678 2974 Crs
1709 3404 Crs
1740 3806 Crs
1770 4180 Crs
1801 4527 Crs
1832 4846 Crs
1863 5137 Crs
1893 5396 Crs
1924 5618 Crs
1955 5796 Crs
1986 5915 Crs
2016 5937 Crs
2047 3548 Crs
2078 1668 Crs
2109 1791 Crs
2139 2256 Crs
2170 2719 Crs
2201 3149 Crs
2232 3551 Crs
2262 3925 Crs
2293 4272 Crs
2324 4591 Crs
2355 4882 Crs
2385 5141 Crs
2416 5363 Crs
2447 5541 Crs
2478 5660 Crs
2508 5682 Crs
2539 3314 Crs
2570 1597 Crs
2601 1586 Crs
2631 1987 Crs
2662 2443 Crs
2693 2874 Crs
2724 3275 Crs
2754 3650 Crs
2785 3997 Crs
2816 4316 Crs
2847 4607 Crs
2877 4865 Crs
2908 5088 Crs
2939 5266 Crs
2969 5385 Crs
3000 5407 Crs
3031 3042 Crs
3062 1572 Crs
3092 1486 Crs
3123 1786 Crs
3154 2152 Crs
3185 2583 Crs
3215 2985 Crs
3246 3359 Crs
3277 3706 Crs
3308 4025 Crs
3338 4316 Crs
3369 4575 Crs
3400 4797 Crs
3431 4975 Crs
3461 5094 Crs
3492 5116 Crs
3523 2740 Crs
3554 1461 Crs
3584 1479 Crs
3615 1637 Crs
3646 1830 Crs
3677 2279 Crs
3707 2681 Crs
3738 3055 Crs
3769 3402 Crs
3800 3722 Crs
3830 4012 Crs
3861 4271 Crs
3892 4493 Crs
3923 4671 Crs
3953 4790 Crs
3984 4813 Crs
4015 2437 Crs
4046 1427 Crs
4076 1494 Crs
4107 1589 Crs
4138 1291 Crs
4169 1971 Crs
4199 2366 Crs
4230 2740 Crs
4261 3088 Crs
4292 3407 Crs
4322 3698 Crs
4353 3956 Crs
4384 4178 Crs
4415 4357 Crs
4445 4476 Crs
4476 4498 Crs
4507 2125 Crs
4538 1736 Crs
4568 1574 Crs
4599 1382 Crs
4630 1085 Crs
4661 1653 Crs
4691 2041 Crs
4722 2416 Crs
4753 2764 Crs
4784 3083 Crs
4814 3374 Crs
4845 3632 Crs
4876 3855 Crs
4907 4033 Crs
4937 4152 Crs
4968 4174 Crs
4999 1818 Crs
5030 1516 Crs
5060 1507 Crs
5091 1411 Crs
5122 1542 Crs
5153 1432 Crs
5183 1709 Crs
5214 2085 Crs
5245 2431 Crs
5275 2751 Crs
5306 3041 Crs
5337 3300 Crs
5368 3522 Crs
5398 3700 Crs
5429 3820 Crs
5460 3842 Crs
5491 1360 Crs
5521 1332 Crs
5552 1677 Crs
5583 1561 Crs
5614 1198 Crs
5644 1299 Crs
5675 1265 Crs
5706 1743 Crs
5737 2091 Crs
5767 2411 Crs
5798 2702 Crs
5829 2960 Crs
5860 3183 Crs
5890 3361 Crs
5921 3480 Crs
5952 3502 Crs
5983 1437 Crs
6013 1699 Crs
6044 1493 Crs
6075 1603 Crs
6106 1525 Crs
6136 1333 Crs
6167 1153 Crs
6198 1472 Crs
6229 1754 Crs
6259 2066 Crs
6290 2356 Crs
6321 2614 Crs
6352 2836 Crs
6382 3014 Crs
6413 3134 Crs
6444 3156 Crs
6475 1391 Crs
6505 1601 Crs
6536 1668 Crs
6567 1660 Crs
6598 1444 Crs
6628 1479 Crs
6659 1455 Crs
6690 1081 Crs
6721 995 Crs
6751 1706 Crs
6782 2002 Crs
6813 2261 Crs
6844 2484 Crs
6874 2662 Crs
6905 2781 Crs
6936 2804 Crs
6967 1386 Crs
6997 1317 Crs
7028 1596 Crs
7059 1674 Crs
7090 1356 Crs
7120 1402 Crs
7151 1214 Crs
7182 1343 Crs
7213 1336 Crs
7243 1435 Crs
7274 1663 Crs
7305 1906 Crs
7336 2126 Crs
7366 2304 Crs
7397 2423 Crs
7428 2445 Crs
7459 1356 Crs
7489 1574 Crs
7520 1669 Crs
7551 1695 Crs
7581 1417 Crs
7612 1267 Crs
7643 1520 Crs
7674 1379 Crs
7704 1437 Crs
7735 1252 Crs
7766 1248 Crs
7797 1504 Crs
7827 1754 Crs
7858 1938 Crs
7889 2058 Crs
7920 2081 Crs
7950 1356 Crs
7981 1700 Crs
8012 1612 Crs
8043 1770 Crs
8073 1600 Crs
8104 1460 Crs
8135 1353 Crs
8166 1385 Crs
8196 1221 Crs
8227 1319 Crs
8258 1310 Crs
8289 1360 Crs
8319 1459 Crs
8350 1585 Crs
8381 1689 Crs
8412 1707 Crs
8442 1345 Crs
9386 3451 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
602 6779 N
602 448 L
9224 0 V
0 6331 V
-9224 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
